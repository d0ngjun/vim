" ==========================================
" bundle 插件管理和配置项
" ==========================================

" 非兼容vi模式。去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
set nocompatible
" configure Vundle
filetype off " required! turn off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#rc()

" 使用Vundle来管理插件
" :BundleInstall 安装配置的插件
" :BundleUpdate  更新
" :BundleClean   删除本地无用插件
Bundle 'VundleVim/Vundle.vim'

" ################### 基础 ######################

" 多语言语法检查
" :SyntasticInfo  display the available/enabled checkers.
" :Errors         list errors
Bundle 'scrooloose/syntastic'
let g:syntastic_error_symbol = '>>'
let g:syntastic_warning_symbol = '>'
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_highlighting = 1
let g:syntastic_python_python_exec = '/usr/bin/python3'
let g:syntastic_cpp_compiler_options = '-std=c++14'

" pyflakes is faster than pylint
let g:syntastic_python_checkers = ['pyflakes', 'pep8']
" pyflakes is faster than pylint
let g:syntastic_javascript_checkers = ['jshint']
" let g:syntastic_python_pep8_args = '--ignore=E501,E225,E124,E712,E126,E128'
let g:loaded_syntastic_java_javac_checker = 1

" enable check for c/cpp files
let g:ycm_show_diagnostics_ui = 0

" load project configuration.
"let g:syntastic_cpp_config_file = '~/.syntastic_config'

" ################### 功能相关 ###################

" edit history, 可以查看回到某个历史状态
Bundle 'sjl/gundo.vim'
nnoremap <leader>h :GundoToggle<CR>

Bundle 'ctrlpvim/ctrlp.vim'

" ################### 显示增强 ###################

" 状态栏增强展示
Bundle 'bling/vim-airline'
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.crypt = '🔒'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = '∄'
let g:airline_symbols.whitespace = 'Ξ'

" 是否打开tabline
"let g:airline#extensions#tabline#enabled = 1

" 新的airline配置
Bundle 'vim-airline/vim-airline-themes'

" 括号显示增强
Bundle 'kien/rainbow_parentheses.vim'
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
let g:rbpt_loadcmd_toggle = 0
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

" ################### 显示增强-主题 ###################"

" 主题 molokai
Bundle 'tomasr/molokai'
let g:molokai_original = 1
let g:rehash256 = 1

" ################### 快速导航 ###################
"目录导航
Bundle 'scrooloose/nerdtree'
map <leader>n :NERDTreeMirrorToggle<CR>
let NERDTreeHighlightCursorline = 1
let NERDTreeIgnore = ['\.pyc$', '\.pyo$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$', '^\.svn$', '^\.hg$']
"close vim if the only window left open is a NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | end
" s/v 分屏打开文件
let g:NERDTreeMapOpenSplit = 's'
let g:NERDTreeMapOpenVSplit = 'v'

Bundle 'jistr/vim-nerdtree-tabs'
" 自动开启nerdtree
"let g:nerdtree_tabs_open_on_console_startup = 1

" ################### 语言相关 ###################

" 代码格式化
"Bundle 'rhysd/vim-clang-format'
"map = :ClangFormat<CR>

" For tmux navigator Ctrl-hjkl
Bundle 'christoomey/vim-tmux-navigator'
